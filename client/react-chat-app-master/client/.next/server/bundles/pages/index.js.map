{"version":3,"file":"bundles\\pages\\index.js","sources":["webpack:///webpack/bootstrap b7f84b5a0e8b8cf58ed0","webpack:///components/AuthenticatedUser.js","webpack:///components/Conversation.js","webpack:///components/ConversationList.js","webpack:///components/Footer.js","webpack:///components/MessageList.js","webpack:///components/SearchInput.js","webpack:///components/TextMessage.js","webpack:///components/UserList.js","webpack:///components/ui/Avatar.js","webpack:///graphql/mutations/createConversation.js","webpack:///graphql/mutations/sendTextMessage.js","webpack:///graphql/queries/myConversations.js","webpack:///graphql/queries/users.js","webpack:///graphql/subscriptions/text.js","webpack:///graphql/subscriptions/user.js","webpack:///lib/checkLoggedIn.js","webpack:///lib/redirect.js","webpack:///pages/index.js","webpack:///utils/randomEmoji.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"cookie\"","webpack:///external \"graphql-tag\"","webpack:///external \"moment\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-apollo\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b7f84b5a0e8b8cf58ed0","import gql from \"graphql-tag\";\nimport { Query, ApolloConsumer } from \"react-apollo\";\nimport cookie from \"cookie\";\n\nimport redirect from \"../lib/redirect\";\n\nconst ME = gql`\n  query me {\n    me {\n      id\n      username\n    }\n  }\n`;\n\nconst AuthenticatedUser = ({ children }) => {\n  const logout = apolloClient => {\n    document.cookie = cookie.serialize(\"token\", \"\", {\n      maxAge: -1 // Expire the cookie immediately\n    });\n\n    // Force a reload of all the current queries now that the user is\n    // logged in, so we don't accidentally leave any state around.\n    apolloClient.cache.reset().then(() => {\n      // Redirect to a more useful page when signed out\n      redirect({}, \"/\");\n    });\n  };\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <Query query={ME}>\n          {({ loading, error, data }) => (\n            <React.Fragment>\n              {children({\n                isAuthenticated: !loading && !error && data,\n                logout: () => logout(client),\n                loading,\n                error,\n                data\n              })}\n            </React.Fragment>\n          )}\n        </Query>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nexport default AuthenticatedUser;\n\n\n\n// WEBPACK FOOTER //\n// components/AuthenticatedUser.js","import MessageList from \"./MessageList\";\nimport Avatar from \"./ui/Avatar\";\n\nexport default class Conversation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: \"\" };\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  renderConversationHeader() {\n    const { conversation } = this.props;\n\n    return (\n      <header className=\"h-16 border-b p-4 flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <Avatar className=\"mr-4\" initials={conversation.name} size=\"large\" />\n          <div className=\"font-bold\">{conversation.name}</div>\n        </div>\n        <div className=\"flex\">\n          {conversation.participants.map(participant => (\n            <Avatar\n              key={participant.id}\n              initials={participant.username}\n              style={{ marginRight: -7 }}\n            />\n          ))}\n        </div>\n      </header>\n    );\n  }\n\n  renderConversationBody() {\n    const { conversation } = this.props;\n\n    return (\n      <div className=\"flex-1 p-4 overflow-y-scroll scrolling-touch\">\n        <MessageList messages={conversation.texts} />\n        <div\n          ref={el => {\n            this.messagesEnd = el;\n          }}\n        />\n      </div>\n    );\n  }\n\n  renderConversationFooter = () => {\n    const { onTextMessageSend } = this.props;\n\n    return (\n      <footer className=\"h-16 border-t\">\n        <form className=\"h-full\" onSubmit={e => e.preventDefault()}>\n          <input\n            type=\"text\"\n            className=\"block w-full h-full p-4 outline-none\"\n            placeholder=\"Type something...\"\n            value={this.state.text}\n            onChange={e => this.setState({ text: e.target.value })}\n            onKeyPress={e => {\n              const text = e.target.value;\n              if (e.key === \"Enter\" && text !== \"\") {\n                e.preventDefault();\n                onTextMessageSend && onTextMessageSend(text);\n                this.setState({ text: \"\" });\n              }\n            }}\n          />\n        </form>\n      </footer>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"flex flex-col h-full\">\n        {this.renderConversationHeader()}\n        {this.renderConversationBody()}\n        {this.renderConversationFooter()}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/Conversation.js","import moment from \"moment\";\n\nimport Avatar from \"./ui/Avatar\";\nimport AuthenticatedUser from \"./AuthenticatedUser\";\n\nexport default class ConversationList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.subscribeToNewConversationMessages();\n  }\n\n  render() {\n    const { loading, error, conversations, onClick } = this.props;\n\n    if (loading) return \"Loading...\";\n    if (error) return error.toString();\n\n    return (\n      <AuthenticatedUser>\n        {({ isAuthenticated, data: { me } }) =>\n          isAuthenticated && (\n            <ul className=\"list-reset\">\n              <li className=\"font-bold m-4\">Conversations</li>\n              {conversations.map(conversation => {\n                const conversationHasTextMessages =\n                  conversation.texts.length > 0;\n                const lastTextMessage = conversationHasTextMessages\n                  ? conversation.texts[conversation.texts.length - 1]\n                  : null;\n                const lastTextMessageAuthorIsMe =\n                  conversationHasTextMessages &&\n                  lastTextMessage.author.id === me.id;\n\n                return (\n                  <li\n                    key={conversation.id}\n                    className=\"px-4 py-2 hover:bg-grey-lightest cursor-pointer flex items-center\"\n                    onClick={e => {\n                      onClick(conversation);\n                    }}\n                  >\n                    <div className=\"mr-3\">\n                      <Avatar initials={conversation.name} />\n                    </div>\n                    <div className=\"text-sm flex-1\">\n                      <div className=\"font-bold\">{conversation.name}</div>\n                      <div className=\"flex justify-between text-grey-dark\">\n                        <div\n                          className=\"mt-1 w-32 overflow-hidden whitespace-no-wrap\"\n                          style={{\n                            textOverflow: \"ellipsis\"\n                          }}\n                        >\n                          {lastTextMessageAuthorIsMe && \"You: \"}\n                          {conversationHasTextMessages && lastTextMessage.text}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-xs text-grey-dark\">\n                      {conversationHasTextMessages &&\n                        moment(lastTextMessage.createdAt).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          )\n        }\n      </AuthenticatedUser>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/ConversationList.js","export default () => (\n  <div className=\"my-16 text-center text-grey text-sm\">\n    Made by{\" \"}\n    <a\n      className=\"text-black\"\n      href=\"https://twitter.com/jferrettiboke\"\n      target=\"_blank\"\n    >\n      Jesús Ferretti\n    </a>\n  </div>\n);\n\n\n\n// WEBPACK FOOTER //\n// components/Footer.js","import TextMessage from \"./TextMessage\";\nimport AuthenticatedUser from \"./AuthenticatedUser\";\n\nexport default ({ messages }) => (\n  <AuthenticatedUser>\n    {({ data: { me } }) => (\n      <React.Fragment>\n        {messages.map(message => (\n          <TextMessage\n            key={message.id}\n            text={message.text}\n            author={message.author.username}\n            direction={message.author.id === me.id ? \"outgoing\" : \"incoming\"}\n          />\n        ))}\n      </React.Fragment>\n    )}\n  </AuthenticatedUser>\n);\n\n\n\n// WEBPACK FOOTER //\n// components/MessageList.js","export default class SearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"block w-full h-full p-4 outline-none\"\n        placeholder=\"Search...\"\n        onChange={e => {\n          const { value } = e.target;\n          this.setState({ input: value });\n          this.props.onChange(value);\n        }}\n        value={this.state.input}\n      />\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/SearchInput.js","import Avatar from \"./ui/Avatar\";\n\nexport default ({ direction, text, author }) => (\n  <div\n    style={{\n      transform: direction === \"incoming\" && \"scaleX(-1)\"\n    }}\n  >\n    <div className=\"flex justify-end my-4\">\n      <div className=\"flex items-end justify-end md:w-3/5 lg:2/5\">\n        <div className=\"mr-3\">\n          <div\n            className=\"text-xs text-grey mb-1 mx-3\"\n            style={{\n              transform: direction === \"incoming\" && \"scaleX(-1)\"\n            }}\n          >\n            {author}\n          </div>\n          <div\n            className={[\n              \"p-3 py-2 leading-normal text-sm\",\n              direction === \"incoming\"\n                ? \"bg-grey-lighter\"\n                : \"gradient-primary text-white\"\n            ].join(\" \")}\n            style={{\n              borderRadius: 10,\n              transform: direction === \"incoming\" && \"scaleX(-1)\"\n            }}\n          >\n            {text}\n          </div>\n        </div>\n        <div className=\"mr-2\">\n          <Avatar\n            initials={author}\n            style={{\n              transform: direction === \"incoming\" && \"scaleX(-1)\"\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n\n\n// WEBPACK FOOTER //\n// components/TextMessage.js","import Avatar from \"./ui/Avatar\";\n\nexport default class UserList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.subscribeToNewUsers();\n  }\n\n  render() {\n    const { loading, error, users, onClick } = this.props;\n\n    return (\n      <ul className=\"list-reset\">\n        <li className=\"font-bold m-4\">Users</li>\n        {users.map(user => (\n          <li\n            key={user.id}\n            className=\"px-4 py-2 hover:bg-grey-lightest cursor-pointer flex items-center\"\n            onClick={e => {\n              onClick(user);\n            }}\n          >\n            <Avatar className=\"mr-3\" initials={user.username} />\n            <div className=\"text-sm flex-1\">\n              <div className=\"font-bold\">{user.username}</div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/UserList.js","export default ({ src, initials, size, className, ...rest }) => {\n  if (src) {\n    return (\n      <img\n        className={[\n          \"rounded-full border-2 border-white\",\n          size === \"small\" && \"w-6 h-6\",\n          size === \"large\" && \"w-10 h-10\",\n          !size && \"w-8 h-8\",\n          className\n        ].join(\" \")}\n        src={src}\n        alt=\"...\"\n        title={initials}\n        {...rest}\n      />\n    );\n  }\n\n  if (initials) {\n    return (\n      <span\n        className={[\n          \"rounded-full border-2 border-white bg-grey-light text-white font-bold flex justify-center items-center text-sm\",\n          size === \"small\" && \"w-6 h-6\",\n          size === \"large\" && \"w-10 h-10\",\n          !size && \"w-8 h-8\",\n          className\n        ].join(\" \")}\n        title={initials}\n        {...rest}\n      >\n        {initials.charAt(0)}\n      </span>\n    );\n  }\n\n  return null;\n};\n\n\n\n// WEBPACK FOOTER //\n// components/ui/Avatar.js","import gql from \"graphql-tag\";\n\nexport default gql`\n  mutation createConversation(\n    $name: String\n    $participantIds: [ID!]!\n    $text: String\n  ) {\n    createConversation(\n      name: $name\n      participantIds: $participantIds\n      text: $text\n    ) {\n      id\n      name\n      participants {\n        id\n        username\n      }\n      texts {\n        id\n        text\n        createdAt\n        author {\n          id\n          username\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// graphql/mutations/createConversation.js","import gql from \"graphql-tag\";\n\nexport default gql`\n  mutation sendTextMessage($conversationId: ID!, $text: String!) {\n    sendTextMessage(conversationId: $conversationId, text: $text) {\n      id\n      text\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// graphql/mutations/sendTextMessage.js","import gql from \"graphql-tag\";\n\nexport default gql`\n  {\n    me {\n      id\n      conversations {\n        id\n        name\n        participants {\n          id\n          username\n        }\n        texts {\n          id\n          text\n          createdAt\n          author {\n            id\n            username\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// graphql/queries/myConversations.js","import gql from \"graphql-tag\";\n\nexport default gql`\n  {\n    users {\n      id\n      username\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// graphql/queries/users.js","import gql from \"graphql-tag\";\n\nexport default gql`\n  subscription onTextAdded {\n    text {\n      mutation\n      node {\n        id\n        text\n        createdAt\n        author {\n          id\n          username\n        }\n        conversation {\n          id\n          name\n          participants {\n            id\n            username\n          }\n          texts {\n            id\n            text\n            createdAt\n            author {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// graphql/subscriptions/text.js","import gql from \"graphql-tag\";\n\nexport default gql`\n  subscription onUserAdded {\n    user {\n      mutation\n      node {\n        id\n        username\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// graphql/subscriptions/user.js","import gql from \"graphql-tag\";\n\nexport default apolloClient =>\n  apolloClient\n    .query({\n      query: gql`\n        query me {\n          me {\n            id\n            username\n          }\n        }\n      `\n    })\n    .then(({ data }) => {\n      return { me: data.me };\n    })\n    .catch(() => {\n      // Fail gracefully\n      return { me: null };\n    });\n\n\n\n// WEBPACK FOOTER //\n// lib/checkLoggedIn.js","import Router from \"next/router\";\n\nexport default (context, target) => {\n  if (context.res) {\n    // server\n    // 303: \"See other\"\n    context.res.writeHead(303, { Location: target });\n    context.res.end();\n  } else {\n    // In the browser, we just pretend like this never even happened ;)\n    Router.replace(target);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// lib/redirect.js","import React from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport moment from \"moment\";\n\nimport redirect from \"../lib/redirect\";\nimport checkLoggedIn from \"../lib/checkLoggedIn\";\nimport AuthenticatedUser from \"../components/AuthenticatedUser\";\nimport Avatar from \"../components/ui/Avatar\";\nimport Footer from \"../components/Footer\";\nimport SearchInput from \"../components/SearchInput\";\nimport ConversationList from \"../components/ConversationList\";\nimport UserList from \"../components/UserList\";\nimport Conversation from \"../components/Conversation\";\nimport randomEmoji from \"../utils/randomEmoji\";\nimport MY_CONVERSATIONS_QUERY from \"../graphql/queries/myConversations\";\nimport USERS_QUERY from \"../graphql/queries/users\";\nimport CREATE_CONVERSATION_MUTATION from \"../graphql/mutations/createConversation\";\nimport SEND_TEXT_MESSAGE_MUTATION from \"../graphql/mutations/sendTextMessage\";\nimport TEXT_ADDED_SUBSCRIPTION from \"../graphql/subscriptions/text\";\nimport USER_ADDED_SUBSCRIPTION from \"../graphql/subscriptions/user\";\n\nconst contexts = {\n  CONVERSATION: \"CONVERSATION\",\n  USER: \"USER\"\n};\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchInput: \"\",\n      context: {\n        name: null,\n        id: null,\n        data: {}\n      }\n    };\n  }\n\n  static async getInitialProps(context, apolloClient) {\n    const { me } = await checkLoggedIn(context.apolloClient);\n\n    if (!me) {\n      // If not signed in, send them somewhere more useful\n      redirect(context, \"/signup\");\n    }\n\n    return { me };\n  }\n\n  renderHeader() {\n    return (\n      <AuthenticatedUser>\n        {({ logout, data: { me } }) => (\n          <header className=\"my-16 w-full\">\n            <div className=\"text-center\">\n              <div className=\"flex flex-col items-center text-grey\">\n                Logged in as {me.username}\n              </div>\n              <a\n                className=\"block text-black mt-2\"\n                href=\"#\"\n                onClick={e => {\n                  e.preventDefault();\n                  logout();\n                }}\n              >\n                Logout\n              </a>\n            </div>\n          </header>\n        )}\n      </AuthenticatedUser>\n    );\n  }\n\n  renderSearchInput() {\n    return (\n      <SearchInput\n        onChange={searchInput => {\n          this.setState(prevState => ({\n            ...prevState,\n            searchInput\n          }));\n        }}\n      />\n    );\n  }\n\n  renderConversationList() {\n    return (\n      <Query query={MY_CONVERSATIONS_QUERY}>\n        {({ loading, error, data, subscribeToMore }) => (\n          <ConversationList\n            onClick={conversation => {\n              this.setState(prevState => ({\n                ...prevState,\n                context: {\n                  name: contexts.CONVERSATION,\n                  id: conversation.id,\n                  data: conversation\n                }\n              }));\n            }}\n            {...{\n              loading,\n              error,\n              conversations: data.me.conversations.filter(\n                conversation =>\n                  this.state.searchInput !== \"\"\n                    ? conversation.name\n                        .toUpperCase()\n                        .includes(this.state.searchInput.toUpperCase())\n                    : conversation\n              )\n            }}\n            subscribeToNewConversationMessages={() =>\n              subscribeToMore({\n                document: TEXT_ADDED_SUBSCRIPTION,\n                variables: {},\n                updateQuery: (prev, { subscriptionData }) => {\n                  if (!subscriptionData.data) return prev;\n\n                  const newText = subscriptionData.data.text.node;\n                  const conversationExists = prev.me.conversations.find(\n                    conversation => conversation.id === newText.conversation.id\n                  );\n\n                  if (conversationExists) {\n                    // Add message to an existing conversation\n                    const conversations = prev.me.conversations.map(\n                      conversation => {\n                        if (conversation.id === conversationExists.id) {\n                          const { conversation: chat } = newText;\n                          return {\n                            ...conversation,\n                            texts: chat.texts\n                          };\n                        }\n\n                        return conversation;\n                      }\n                    );\n\n                    return {\n                      ...prev,\n                      me: {\n                        ...prev.me,\n                        conversations\n                      }\n                    };\n                  } else {\n                    // Add a new conversation to conversations along with the new message\n                    const { conversation } = newText;\n\n                    return {\n                      ...prev,\n                      me: {\n                        ...prev.me,\n                        conversations: [...prev.me.conversations, conversation]\n                      }\n                    };\n                  }\n                }\n              })\n            }\n          />\n        )}\n      </Query>\n    );\n  }\n\n  renderUserList() {\n    return (\n      <Query query={USERS_QUERY}>\n        {({ loading, error, data, subscribeToMore }) => (\n          <UserList\n            onClick={user => {\n              this.setState(prevState => ({\n                ...prevState,\n                context: { name: contexts.USER, id: user.id, data: user }\n              }));\n            }}\n            {...{\n              loading,\n              error,\n              users: data.users.filter(\n                user =>\n                  this.state.searchInput !== \"\"\n                    ? user.username\n                        .toUpperCase()\n                        .includes(this.state.searchInput.toUpperCase())\n                    : user\n              )\n            }}\n            subscribeToNewUsers={() =>\n              subscribeToMore({\n                document: USER_ADDED_SUBSCRIPTION,\n                variables: {},\n                updateQuery: (prev, { subscriptionData }) => {\n                  if (!subscriptionData.data) return prev;\n\n                  const newUser = subscriptionData.data.user.node;\n\n                  return {\n                    ...prev,\n                    users: [...prev.users, newUser]\n                  };\n                }\n              })\n            }\n          />\n        )}\n      </Query>\n    );\n  }\n\n  renderTextMessageList() {\n    return (\n      <Query query={MY_CONVERSATIONS_QUERY}>\n        {({ loading, error, data }) => {\n          const conversations = data.me.conversations.map(conversation => {\n            return {\n              ...conversation,\n              texts: conversation.texts.filter(\n                textMessage =>\n                  this.state.searchInput !== \"\"\n                    ? textMessage.text\n                        .toUpperCase()\n                        .includes(this.state.searchInput.toUpperCase())\n                    : false\n              )\n            };\n          });\n\n          return (\n            <ul\n              className={[\n                \"list-reset\",\n                this.state.searchInput === \"\" && \"hidden\"\n              ].join(\" \")}\n            >\n              <li className=\"font-bold m-4\">Messages</li>\n              {conversations.map(conversation => (\n                <React.Fragment key={conversation.id}>\n                  {conversation.texts.map(textMessage => (\n                    <li\n                      key={textMessage.id}\n                      className=\"px-4 py-2 hover:bg-grey-lightest cursor-pointer flex items-center\"\n                      onClick={e => {\n                        this.setState(prevState => ({\n                          ...prevState,\n                          context: {\n                            name: contexts.CONVERSATION,\n                            id: conversation.id,\n                            data: conversation\n                          }\n                        }));\n                      }}\n                    >\n                      <div className=\"mr-3\">\n                        <Avatar initials={conversation.name} />\n                      </div>\n                      <div className=\"text-sm flex-1\">\n                        <div className=\"font-bold\">{conversation.name}</div>\n                        <div className=\"flex justify-between text-grey-dark\">\n                          <div\n                            className=\"mt-1 w-32 overflow-hidden whitespace-no-wrap\"\n                            style={{\n                              textOverflow: \"ellipsis\"\n                            }}\n                          >\n                            <AuthenticatedUser>\n                              {({ isAuthenticated, data: { me } }) => {\n                                const author =\n                                  isAuthenticated &&\n                                  me.id === textMessage.author.id\n                                    ? \"You\"\n                                    : textMessage.author.username;\n                                return (\n                                  <span>\n                                    {author}: {textMessage.text}\n                                  </span>\n                                );\n                              }}\n                            </AuthenticatedUser>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"text-xs text-grey-dark\">\n                        {moment(textMessage.createdAt).fromNow()}\n                      </div>\n                    </li>\n                  ))}\n                </React.Fragment>\n              ))}\n            </ul>\n          );\n        }}\n      </Query>\n    );\n  }\n\n  renderConversationNotSelected() {\n    return (\n      <div className=\"flex-1 flex flex-col h-full items-center justify-center\">\n        <div className=\"text-5xl\">{randomEmoji()}</div>\n        <div className=\"mt-6\">Coding is awesome!</div>\n      </div>\n    );\n  }\n\n  renderConversations() {\n    const { context } = this.state;\n    return (\n      <Mutation mutation={SEND_TEXT_MESSAGE_MUTATION}>\n        {(sendTextMessage, { loading, error, data }) => (\n          <Query query={MY_CONVERSATIONS_QUERY}>\n            {({ loading, error, data }) => (\n              <React.Fragment>\n                {data.me.conversations.map(conversation => (\n                  <div\n                    key={conversation.id}\n                    className={[\n                      \"h-full\",\n                      context.name === contexts.CONVERSATION &&\n                      context.id === conversation.id\n                        ? \"block\"\n                        : \"hidden\"\n                    ].join(\" \")}\n                  >\n                    <Conversation\n                      conversation={conversation}\n                      onTextMessageSend={text => {\n                        sendTextMessage({\n                          variables: {\n                            conversationId: conversation.id,\n                            text\n                          }\n                        });\n                      }}\n                    />\n                  </div>\n                ))}\n              </React.Fragment>\n            )}\n          </Query>\n        )}\n      </Mutation>\n    );\n  }\n\n  renderWindowsFromContext({ me }) {\n    let renderWindow;\n    const { context } = this.state;\n\n    if (!context.name) {\n      renderWindow = this.renderConversationNotSelected();\n    }\n\n    if (context.name === contexts.USER) {\n      const conversationExists = me.conversations.find(\n        conversation =>\n          conversation.participants.length === 2 &&\n          conversation.participants.find(\n            participant => participant.id === context.id\n          )\n      );\n\n      if (conversationExists) {\n        this.setState(prevState => ({\n          ...prevState,\n          context: {\n            name: contexts.CONVERSATION,\n            id: conversationExists.id,\n            data: conversationExists\n          }\n        }));\n      } else {\n        renderWindow = (\n          <Mutation mutation={CREATE_CONVERSATION_MUTATION}>\n            {(createConversation, { loading, error, data }) => (\n              <Conversation\n                conversation={{\n                  id: null,\n                  name: context.data.username,\n                  participants: [],\n                  texts: []\n                }}\n                onTextMessageSend={text => {\n                  createConversation({\n                    variables: {\n                      name: null,\n                      participantIds: [context.id],\n                      text\n                    }\n                  }).then(({ data }) => {\n                    this.setState(prevState => ({\n                      ...prevState,\n                      context: {\n                        name: contexts.CONVERSATION,\n                        id: data.createConversation.id,\n                        data: data.createConversation\n                      }\n                    }));\n                  });\n                }}\n              />\n            )}\n          </Mutation>\n        );\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {renderWindow}\n        {this.renderConversations()}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen\">\n        {this.renderHeader()}\n        <div\n          className=\"w-2/3 rounded border flex bg-white overflow-hidden\"\n          style={{ height: 500 }}\n        >\n          <div id=\"leftTile\" className=\"w-1/3 border-r flex flex-col\">\n            <div id=\"search\" className=\"h-16 border-b\">\n              {this.renderSearchInput()}\n            </div>\n            <div className=\"flex-1 overflow-y-scroll scrolling-touch py-2\">\n              {this.renderConversationList()}\n              {this.renderUserList()}\n              {this.renderTextMessageList()}\n            </div>\n          </div>\n          <div id=\"rightTile\" className=\"w-2/3\">\n            <Query query={MY_CONVERSATIONS_QUERY}>\n              {({ loading, error, data }) =>\n                this.renderWindowsFromContext({ me: data.me })\n              }\n            </Query>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js","export default function randomEmoji() {\n  const emoji = [\"😎\", \"🤩\", \"😍\", \"🤓\"];\n  const index = Math.floor(Math.random() * emoji.length);\n\n  return emoji[index];\n}\n\n\n\n// WEBPACK FOOTER //\n// utils/randomEmoji.js","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 0 1 3 4","module.exports = require(\"cookie\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie\"\n// module id = cookie\n// module chunks = 0 3 4","module.exports = require(\"graphql-tag\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tag\"\n// module id = graphql-tag\n// module chunks = 3 4","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = moment\n// module chunks = 3","module.exports = require(\"next/router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/router\"\n// module id = next/router\n// module chunks = 3 4","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0 1 3 4","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 0 3 4"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AAEA;AAEA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAFA;AAFA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAkBA;AA9EA;AAEA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAMA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAA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","sourceRoot":""}