{"version":3,"file":"bundles\\pages\\_app.js","sources":["webpack:///webpack/bootstrap e2120ed01abad6b7e0ba","webpack:///lib/initApollo.js","webpack:///lib/withApollo.js","webpack:///pages/_app.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"apollo-boost\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-context\"","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-link-ws\"","webpack:///external \"apollo-utilities\"","webpack:///external \"cookie\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/app\"","webpack:///external \"next/head\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e2120ed01abad6b7e0ba","import { ApolloClient, InMemoryCache } from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport fetch from \"isomorphic-unfetch\";\nimport { split } from \"apollo-link\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nlet apolloClient = null;\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser) {\n  global.fetch = fetch;\n}\n\nfunction create(initialState, { getToken }) {\n  const httpLink = createHttpLink({\n    uri: \"http://localhost:4000\"\n    //credentials: \"same-origin\"\n  });\n\n  const authLink = setContext((_, { headers }) => {\n    const token = getToken();\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    };\n  });\n\n  let link = authLink.concat(httpLink);\n\n  if (process.browser) {\n    const token = getToken();\n    const wsLink = new WebSocketLink({\n      uri: `ws://localhost:4000`,\n      options: {\n        reconnect: true,\n        connectionParams: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    });\n\n    link = split(\n      // split based on operation type\n      ({ query }) => {\n        const { kind, operation } = getMainDefinition(query);\n        return kind === \"OperationDefinition\" && operation === \"subscription\";\n      },\n      wsLink,\n      authLink.concat(httpLink)\n    );\n  }\n\n  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient\n  return new ApolloClient({\n    connectToDevTools: process.browser,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    link,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\n\nexport default function initApollo(initialState, options) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(initialState, options);\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState, options);\n  }\n\n  return apolloClient;\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/initApollo.js","import React from \"react\";\nimport cookie from \"cookie\";\nimport PropTypes from \"prop-types\";\nimport { getDataFromTree } from \"react-apollo\";\nimport Head from \"next/head\";\n\nimport initApollo from \"./initApollo\";\n\nfunction parseCookies(req, options = {}) {\n  return cookie.parse(\n    req ? req.headers.cookie || \"\" : document.cookie,\n    options\n  );\n}\n\nexport default App => {\n  return class WithData extends React.Component {\n    static displayName = `WithData(${App.displayName})`;\n    static propTypes = {\n      apolloState: PropTypes.object.isRequired\n    };\n\n    static async getInitialProps(ctx) {\n      const {\n        Component,\n        router,\n        ctx: { req, res }\n      } = ctx;\n      const apollo = initApollo(\n        {},\n        {\n          getToken: () => parseCookies(req).token\n        }\n      );\n\n      ctx.ctx.apolloClient = apollo;\n\n      let appProps = {};\n      if (App.getInitialProps) {\n        appProps = await App.getInitialProps(ctx);\n      }\n\n      if (res && res.finished) {\n        // When redirecting, the response is finished.\n        // No point in continuing to render\n        return {};\n      }\n\n      // Run all graphql queries in the component tree\n      // and extract the resulting data\n      try {\n        // Run all GraphQL queries\n        await getDataFromTree(\n          <App\n            {...appProps}\n            Component={Component}\n            router={router}\n            apolloClient={apollo}\n          />\n        );\n      } catch (error) {\n        // Prevent Apollo Client GraphQL errors from crashing SSR.\n        // Handle them in components via the data.error prop:\n        // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n        console.error(\"Error while running `getDataFromTree`\", error);\n      }\n\n      if (!process.browser) {\n        // getDataFromTree does not call componentWillUnmount\n        // head side effect therefore need to be cleared manually\n        Head.rewind();\n      }\n\n      // Extract query data from the Apollo's store\n      const apolloState = apollo.cache.extract();\n\n      return {\n        ...appProps,\n        apolloState\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      // `getDataFromTree` renders the component first, the client is passed off as a property.\n      // After that rendering is done using Next's normal rendering pipeline\n      this.apolloClient = initApollo(props.apolloState, {\n        getToken: () => parseCookies().token\n      });\n    }\n\n    render() {\n      return <App {...this.props} apolloClient={this.apolloClient} />;\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// lib/withApollo.js","import React from \"react\";\nimport App, { Container } from \"next/app\";\nimport { ApolloProvider } from \"react-apollo\";\nimport withApollo from \"../lib/withApollo\";\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, apolloClient } = this.props;\n\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n        <style jsx global>{`\n          .gradient-primary {\n            background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\n          }\n        `}</style>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp);\n\n\n\n// WEBPACK FOOTER //\n// pages/_app.js","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 0 1 4","module.exports = require(\"apollo-boost\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-boost\"\n// module id = apollo-boost\n// module chunks = 0","module.exports = require(\"apollo-link\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link\"\n// module id = apollo-link\n// module chunks = 0","module.exports = require(\"apollo-link-context\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-context\"\n// module id = apollo-link-context\n// module chunks = 0","module.exports = require(\"apollo-link-http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-http\"\n// module id = apollo-link-http\n// module chunks = 0","module.exports = require(\"apollo-link-ws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-ws\"\n// module id = apollo-link-ws\n// module chunks = 0","module.exports = require(\"apollo-utilities\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-utilities\"\n// module id = apollo-utilities\n// module chunks = 0","module.exports = require(\"cookie\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie\"\n// module id = cookie\n// module chunks = 0 4","module.exports = require(\"isomorphic-unfetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-unfetch\"\n// module id = isomorphic-unfetch\n// module chunks = 0","module.exports = require(\"next/app\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/app\"\n// module id = next/app\n// module chunks = 0","module.exports = require(\"next/head\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/head\"\n// module id = next/head\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = prop-types\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0 1 4","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 0 4","module.exports = require(\"styled-jsx/style\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"styled-jsx/style\"\n// module id = styled-jsx/style\n// module chunks = 0"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAFA;AAUA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AAIA;AAGA;AAAA;AAAA;AADA;AAKA;AAEA;AACA;AAtBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAuBA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAuCA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AAtCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA6CA;AACA;AACA;AACA;AACA;AAjDA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DA;AA8DA;AA9DA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAiEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAJA;AAOA;AACA;AA1EA;AAAA;AAAA;AA4EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA7EA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AAFA;AA+EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAWA;;;;AAhBA;AACA;AAkBA;;;;;;;;;;;;;;;ACxBA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}