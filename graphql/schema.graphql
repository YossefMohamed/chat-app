type User {
  id: String!
  username: String!
  email: String
  createdAt: String!
  token: String
  imageUrl: String
}
type Message {
  id: ID!
  content: String!
  senderId: String!
  receiverId: String!
  createdAt: String!
}

type Query {
  getUsers: [User!]!
  login(email: String!, password: String!): AuthPayload!
  getMessages(with: String!): [Message]!
  getUser(user: String!): User!
}
type Mutation {
  deleteUser: User!
  register(
    username: String!
    email: String!
    password: String!
    confirmPassword: String!
  ): AuthPayload!
  updateUser(username: String, email: String, password: String): AuthPayload!
 
  sendMessage(to: String!, content: String!): Message!
  deleteMessage(messageId: Int!): Message!
  updateMessage(content: String!, messageId: Int!): Message!
}
type AuthPayload {
  token: String!
  user: User!
}

type Subscription {
  newMessage: Message!
}
